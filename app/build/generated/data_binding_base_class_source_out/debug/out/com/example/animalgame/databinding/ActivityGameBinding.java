// Generated by view binder compiler. Do not edit!
package com.example.animalgame.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.gridlayout.widget.GridLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.animalgame.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.progressindicator.LinearProgressIndicator;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityGameBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final MaterialButton deleteButton;

  @NonNull
  public final MaterialButton exitButton;

  @NonNull
  public final RelativeLayout headerSection;

  @NonNull
  public final CardView imageCard;

  @NonNull
  public final LinearLayout letterBoxesContainer;

  @NonNull
  public final GridLayout letterGrid;

  @NonNull
  public final ImageView levelImage;

  @NonNull
  public final LinearProgressIndicator levelProgress;

  @NonNull
  public final TextView levelText;

  private ActivityGameBinding(@NonNull RelativeLayout rootView,
      @NonNull MaterialButton deleteButton, @NonNull MaterialButton exitButton,
      @NonNull RelativeLayout headerSection, @NonNull CardView imageCard,
      @NonNull LinearLayout letterBoxesContainer, @NonNull GridLayout letterGrid,
      @NonNull ImageView levelImage, @NonNull LinearProgressIndicator levelProgress,
      @NonNull TextView levelText) {
    this.rootView = rootView;
    this.deleteButton = deleteButton;
    this.exitButton = exitButton;
    this.headerSection = headerSection;
    this.imageCard = imageCard;
    this.letterBoxesContainer = letterBoxesContainer;
    this.letterGrid = letterGrid;
    this.levelImage = levelImage;
    this.levelProgress = levelProgress;
    this.levelText = levelText;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityGameBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityGameBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_game, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityGameBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.deleteButton;
      MaterialButton deleteButton = ViewBindings.findChildViewById(rootView, id);
      if (deleteButton == null) {
        break missingId;
      }

      id = R.id.exitButton;
      MaterialButton exitButton = ViewBindings.findChildViewById(rootView, id);
      if (exitButton == null) {
        break missingId;
      }

      id = R.id.headerSection;
      RelativeLayout headerSection = ViewBindings.findChildViewById(rootView, id);
      if (headerSection == null) {
        break missingId;
      }

      id = R.id.imageCard;
      CardView imageCard = ViewBindings.findChildViewById(rootView, id);
      if (imageCard == null) {
        break missingId;
      }

      id = R.id.letterBoxesContainer;
      LinearLayout letterBoxesContainer = ViewBindings.findChildViewById(rootView, id);
      if (letterBoxesContainer == null) {
        break missingId;
      }

      id = R.id.letterGrid;
      GridLayout letterGrid = ViewBindings.findChildViewById(rootView, id);
      if (letterGrid == null) {
        break missingId;
      }

      id = R.id.levelImage;
      ImageView levelImage = ViewBindings.findChildViewById(rootView, id);
      if (levelImage == null) {
        break missingId;
      }

      id = R.id.levelProgress;
      LinearProgressIndicator levelProgress = ViewBindings.findChildViewById(rootView, id);
      if (levelProgress == null) {
        break missingId;
      }

      id = R.id.levelText;
      TextView levelText = ViewBindings.findChildViewById(rootView, id);
      if (levelText == null) {
        break missingId;
      }

      return new ActivityGameBinding((RelativeLayout) rootView, deleteButton, exitButton,
          headerSection, imageCard, letterBoxesContainer, letterGrid, levelImage, levelProgress,
          levelText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
